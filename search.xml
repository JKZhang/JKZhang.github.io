<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[第一章 高级数据库概述]]></title>
    <url>%2F2019%2F03%2F%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[第一章 高级数据库概述1.数据与存储系统 •存储层次 Register Cache 主存（Main memory） 辅存（Disk） •新型存储体系 2.数据库系统发展 •数据模型 数据结构, 操作 层次, 网状, 关系, OO, 时态, 空间, 图, 时空, 文本, 工程, 生物, 地理, 图像数据库等 •运行环境 集中式, 分布式, 并行,移动, Cluster, Web, 嵌入，云等 •计算方式 被动/主动, 实时数据库 批处理/流处理等 •数据库（DB） 可以存储长时间的信息集合 •数据库管理系统（DBMS） 允许用户使用专门的数据定义语言和操作语言, 支持大数据量数据的长时间存储,并能正确控制多个用户对数据有效存取的软件 3.关系模型与面向对象模型 •概念层 ——直接面对用户 语义表达能力强 易于被用户理解 独立于任何DBMS 易于向逻辑模型转换 •逻辑层 ——数据模型 用户通过DBMS看到的现实世界 传统的DBMS模型：层次，网络，关系模型 新型的DBMS模型：O—O模型，对象—关系模型等 •物理层 ——对用户透明 数据的表示（存储格式） 数据的索引 高效的操作实现 一致性维护及故障处理 •为什么需要OODB 一些数据结构复杂，难于用关系模型描述。 •面向对象模型 —— OO模型 基本概念： 对象标识 OID 对象封装 类和类的嵌套 类和类的继承 持久对象概念 数据模型 用对象与类结构以及类间继承与组合关系建立数据间的复杂结构关系 模式上的操作 用对象与类中方法构作模式上的操作，这种操作语义远强于传统数据模型 OODBMS必须满足两个基本条件 支持核心的面向对象数据模型 支持传统数据库系统所具有的数据库特征 •特化、泛化 •概念模型及其描述工具 E/R 模型：实体—联系模型 –用实体描述对象属性 –用联系描述对象间的语义关系 基于UML的面向对象的模型 （Unified Modeling Language） –静态对象模型 描述对象的属性，关联，聚合，继承，等等 –动态对象模型 描述对象行为，相互作用，合作和变化，等等 –支持概念模型与逻辑模型无缝联接 基于XML的对象模型 –易学，易扩充 –易于快速开发软件 –多个工具可以支持结构转换 4.集中式系统与分布式系统 •分布式数据库系统 定义: 物理上分散而逻辑上集中的数据库系统. 特点 物理分布性 数据不在单个Site上, 按全局需求将数据划分成一定的数据子集, 分散存储在各个Site上 逻辑整体性 各个Site上的数据子集, 相互间有严密的约束规则加以限定, 逻辑上是一个整体 站点自治性 各个Site上的数据(即LDB)是由本地的DBMS管理, 具有自治处理能力 •为什么需要分布式系统 分布为并行执行提供了可能性 复制增加了可用性 •分布式数据库分类 同构型(Homogeneous) 各个Site上的DB数据模型相同 进一步可分为 同构同质型 同构异质型 异构型(Heterogeneous) 各个Site上的DB数据模型不同 集中型 DDB的全局控制信息位于一个中心Sie上 分散型 每个Site上包含有全局控制信息的一个Copy 可变型 DDB分成两组, 一组Site包含全局控制信息Copy(主Site), 另一组不含全局Copy(辅Site)]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>分布式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>分布式</tag>
      </tags>
  </entry>
</search>
